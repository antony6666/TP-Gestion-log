#code fait par Anthony MARTIN & Antony LAIGNEAU

input {
  	file { 
		path => "/home/etudiant/Téléchargements/rmt-nids.log.1" 
      	  	start_position => "beginning"
      	  	sincedb_path => "/dev/null"
	}
}

filter {
	grok {

		
		match => { "message" => [
					#pattern 1 *
						#TCP
					 '%{SYSLOGTIMESTAMP:sysdate} %{HOSTNAME:host} (%{SYSLOGPROG:syslogprog}:) bad %{WORD:studiedProtocol} : %{WORD:ipProtocol}( .*? )(?<trsptProtocol>.*?) : (?<rmtnidsComment>.*?) (?<payload>[Push].*?) length : (?<payloadSize>.*?). Detected from : %{IP:ipSrc} to dst : %{IP:ipDst}. Seen at : %{TIMESTAMP_ISO8601:programTimestamp}.$'
						#protocol 47
					,'%{SYSLOGTIMESTAMP:sysdate} %{HOSTNAME:host} (%{SYSLOGPROG:syslogprog}:) bad %{WORD:studiedProtocol} : %{WORD:ipProtocol}( .*? )(?<trsptProtocol>.*?) . (?<payload>[P].*?) Length : (?<payloadSize>.*?). Detected from : %{IP:ipSrc} to dst : %{IP:ipDst}. Seen at : %{TIMESTAMP_ISO8601:programTimestamp}.$'
						#UDP
					,'%{SYSLOGTIMESTAMP:sysdate} %{HOSTNAME:host} (%{SYSLOGPROG:syslogprog}:) bad %{WORD:studiedProtocol} : %{WORD:ipProtocol}( .*? )(?<trsptProtocol>.*?) - (?<rmtnidsComment>.*?) Payload (?<payload>.*?) length : (?<payloadSize>.*?). Detected from : %{IP:ipSrc} to dst : %{IP:ipDst}. Seen at : %{TIMESTAMP_ISO8601:programTimestamp}.$'	
						#UDP-DNS
					,'%{SYSLOGTIMESTAMP:sysdate} %{HOSTNAME:host} (%{SYSLOGPROG:syslogprog}:) bad %{WORD:studiedProtocol} : %{WORD:ipProtocol}( .*? )(?<trsptProtocol>.*?) (?<rmtnidsComment>.*?) (?<payload>[P].*?) Length : (?<payloadSize>.*?). Detected from : %{IP:ipSrc} to dst : %{IP:ipDst}. Seen at : %{TIMESTAMP_ISO8601:programTimestamp}.$'
						#pattern de base
					,'%{SYSLOGTIMESTAMP:sysdate} %{HOSTNAME:host} (%{SYSLOGPROG:syslogprog}:) bad %{WORD:studiedProtocol} : %{WORD:ipProtocol}( .*? )(?<trsptProtocol>.*?) (?<rmtnidsComment>.*?). Detected from : %{IP:ipSrc} to dst : %{IP:ipDst}. Seen at : %{TIMESTAMP_ISO8601:programTimestamp}.$'
					#pattern 2 *
					,'%{SYSLOGTIMESTAMP:sysdate} %{HOSTNAME:host} (%{SYSLOGPROG:syslogprog}:) bad %{WORD:studiedProtocol} : %{WORD:ipProtocol}( .*? )(?<trsptProtocol>.*?) - (?<rmtnidsComment>.*?\.) Payload \((?<payload>.*)\) length : %{NUMBER:payloadSize} bytes. Detected from : %{IP:ipSrc} to dst : %{IP:ipDst}. Seen at : %{TIMESTAMP_ISO8601:programTimestamp}.$'
					#pattern 3 *
					,'%{SYSLOGTIMESTAMP:sysdate} %{HOSTNAME:host} (%{SYSLOGPROG:syslogprog}:) bad : %{WORD:ipProtocol}( .*? )(?<trsptProtocol>.*?) - (?<rmtnidsComment>.*?\.) Payload \((?<payload>.*)\) length : %{NUMBER:payloadSize} bytes. Detected from : %{IP:ipSrc} to dst : %{IP:ipDst}. Seen at : %{TIMESTAMP_ISO8601:programTimestamp}.$'
					,'%{SYSLOGTIMESTAMP:sysdate} %{HOSTNAME:host} (%{SYSLOGPROG:syslogprog}:) bad : %{WORD:ipProtocol}( .*? )(?<trsptProtocol>.*?) : (?<rmtnidsComment>.*?\.) Payload \((?<payload>.*)\) length : %{NUMBER:payloadSize} bytes. Detected from : %{IP:ipSrc} to dst : %{IP:ipDst}. Seen at : %{TIMESTAMP_ISO8601:programTimestamp}.$'
					#pattern 4
					,'%{SYSLOGTIMESTAMP:sysdate} %{HOSTNAME:host} (%{SYSLOGPROG:syslogprog}:) bad : %{WORD:ipProtocol}( .*? )(?<trsptProtocol>.*?) (?<rmtnidsComment>.*?\.) Original Datagram : (?<payload>.*)\) length : %{NUMBER:payloadSize} bytes. Detected from : %{IP:ipSrc} to dst : %{IP:ipDst}. Seen at : %{TIMESTAMP_ISO8601:programTimestamp}.$'
					#pattern 5
					,'%{SYSLOGTIMESTAMP:sysdate} %{HOSTNAME:host} (%{SYSLOGPROG:syslogprog}:) bad : %{WORD:ipProtocol}( .*? )(?<trsptProtocol>.*?) - (?<rmtnidsComment>.*?\.) Detected from : %{IP:ipSrc} to dst : %{IP:ipDst}. Seen at : %{TIMESTAMP_ISO8601:programTimestamp}.$'					
					]#lenght dans payload size / sport dans rmtnids
			}
		remove_field => [ "message", "@version", "@timestamp", "_type"]
		
		
	}
	date {
		match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
	}

	if ![studiedProtocol] 
	{
    	mutate { add_field => { "studiedProtocol" => "icmp" } } 
  	}

	mutate {

		convert => {
			"response" => "integer"
            		"payloadSize" => "integer"
        	}
    	}
}

output {
    elasticsearch {
         hosts => "localhost:9200"
         index => "rmtnids-%{+YYYY.MM.dd}"
    }
}

#output {
#   stdout { codec => rubydebug }
#}
 

